{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrad\\\\OneDrive\\\\Desktop\\\\study\\\\garbage_segregation\\\\frontend\\\\src\\\\pages\\\\SoilAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SoilAnalysis = ({\n  user\n}) => {\n  _s();\n  const [selectedSoil, setSelectedSoil] = useState('');\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Soil database (same as in Flask app)\n  const soilDb = {\n    'clay': {\n      name: 'Clay Soil',\n      description: 'Fine particles, poor drainage, nutrient-rich but hard for roots to penetrate',\n      deficiencies: ['Nitrogen (N)', 'Phosphorus (P)', 'Organic Matter'],\n      suitable_wastes: ['fruitpeel', 'vegetable', 'garden'],\n      characteristics: {\n        'Drainage': 'Poor',\n        'Water Retention': 'High',\n        'Nutrient Retention': 'High',\n        'pH Range': '6.0-7.5',\n        'Texture': 'Fine, sticky when wet'\n      }\n    },\n    'sandy': {\n      name: 'Sandy Soil',\n      description: 'Large particles, excellent drainage, low nutrient retention',\n      deficiencies: ['Potassium (K)', 'Magnesium (Mg)', 'Water Retention'],\n      suitable_wastes: ['cardboard', 'paper', 'garden'],\n      characteristics: {\n        'Drainage': 'Excellent',\n        'Water Retention': 'Low',\n        'Nutrient Retention': 'Low',\n        'pH Range': '6.0-7.0',\n        'Texture': 'Coarse, gritty'\n      }\n    },\n    'loamy': {\n      name: 'Loamy Soil',\n      description: 'Perfect balance of sand, silt, and clay - ideal for most plants',\n      deficiencies: ['Calcium (Ca)', 'Sulfur (S)'],\n      suitable_wastes: ['vegetable', 'fruitpeel'],\n      characteristics: {\n        'Drainage': 'Good',\n        'Water Retention': 'Moderate',\n        'Nutrient Retention': 'Good',\n        'pH Range': '6.0-7.0',\n        'Texture': 'Smooth, slightly gritty'\n      }\n    },\n    'silty': {\n      name: 'Silty Soil',\n      description: 'Medium-sized particles, good water retention, fertile but can compact',\n      deficiencies: ['Zinc (Zn)', 'Manganese (Mn)'],\n      suitable_wastes: ['fruitpeel', 'garden'],\n      characteristics: {\n        'Drainage': 'Moderate',\n        'Water Retention': 'Good',\n        'Nutrient Retention': 'High',\n        'pH Range': '6.5-7.5',\n        'Texture': 'Smooth, flour-like when dry'\n      }\n    }\n  };\n\n  // Nutrient database for waste types\n  const nutrientDb = {\n    'vegetable': {\n      'Nitrogen (N)': '2.5-4% of dry weight',\n      'Phosphorus (P)': '0.3-0.8% of dry weight',\n      'Potassium (K)': '3-6% of dry weight',\n      'Carbon:Nitrogen (C:N)': '15:1 (Ideal for composting)',\n      'Benefits': 'Quick decomposition, balanced nutrients for plant growth'\n    },\n    'fruitpeel': {\n      'Nitrogen (N)': '1.5-3% of dry weight',\n      'Potassium (K)': '8-12% of dry weight',\n      'Calcium (Ca)': '0.5-2% of dry weight',\n      'Benefits': 'High potassium for flower and fruit development'\n    },\n    'garden': {\n      'Nitrogen (N)': '1.5-3% of dry weight',\n      'Phosphorus (P)': '0.2-0.5% of dry weight',\n      'Silica (Si)': '2-5% (Strengthens plant cells)',\n      'Benefits': 'Improves soil structure and plant disease resistance'\n    },\n    'paper': {\n      'Carbon:Nitrogen (C:N)': '200:1 (High carbon)',\n      'Lignin Content': '20-30% (Slow to decompose)',\n      'Benefits': 'Excellent brown material for composting, improves soil structure'\n    },\n    'cardboard': {\n      'Carbon:Nitrogen (C:N)': '350:1 (Very high carbon)',\n      'Lignin Content': '25-35%',\n      'Benefits': 'Long-term soil conditioning, moisture retention'\n    }\n  };\n  const analyzeSoil = async () => {\n    if (!selectedSoil) {\n      alert('Please select a soil type first');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Try to call the Flask API\n      const formData = new FormData();\n      formData.append('soil_type', selectedSoil);\n      formData.append('analysis_type', 'soil');\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        processLocalSoilAnalysis();\n      } else {\n        processLocalSoilAnalysis();\n      }\n    } catch (error) {\n      console.error('API call failed, using local analysis:', error);\n      processLocalSoilAnalysis();\n    }\n    setLoading(false);\n  };\n  const processLocalSoilAnalysis = () => {\n    const soilData = soilDb[selectedSoil];\n    const recommendations = soilData.suitable_wastes.map(wasteType => ({\n      type: wasteType,\n      name: wasteType.charAt(0).toUpperCase() + wasteType.slice(1),\n      nutrients: nutrientDb[wasteType] || {},\n      priority: calculatePriority(wasteType, soilData.deficiencies)\n    }));\n\n    // Sort recommendations by priority\n    recommendations.sort((a, b) => b.priority - a.priority);\n    setAnalysisResult({\n      soilType: selectedSoil,\n      soilName: soilData.name,\n      description: soilData.description,\n      deficiencies: soilData.deficiencies,\n      characteristics: soilData.characteristics,\n      recommendations: recommendations,\n      improvementTips: getImprovementTips(selectedSoil)\n    });\n  };\n  const calculatePriority = (wasteType, deficiencies) => {\n    const wasteNutrients = nutrientDb[wasteType] || {};\n    let priority = 0;\n    deficiencies.forEach(deficiency => {\n      Object.keys(wasteNutrients).forEach(nutrient => {\n        if (nutrient.includes(deficiency.split(' ')[0])) {\n          priority += 1;\n        }\n      });\n    });\n    return priority;\n  };\n  const getImprovementTips = soilType => {\n    const tips = {\n      'clay': ['Add organic matter like compost to improve drainage', 'Use raised beds to prevent waterlogging', 'Add coarse sand or perlite to improve aeration', 'Avoid walking on clay soil when wet', 'Plant cover crops to improve soil structure'],\n      'sandy': ['Add organic matter frequently to retain nutrients', 'Use mulch to prevent water evaporation', 'Consider slow-release fertilizers', 'Plant nitrogen-fixing cover crops', 'Water more frequently but with less volume'],\n      'loamy': ['Maintain organic matter levels with regular compost', 'Rotate crops to prevent nutrient depletion', 'Test pH regularly and adjust as needed', 'Use balanced fertilizers sparingly', 'Continue sustainable practices'],\n      'silty': ['Improve drainage with organic matter', 'Avoid compaction by minimizing foot traffic', 'Add coarse materials like sand or compost', 'Use raised beds if drainage is poor', 'Plant deep-rooted plants to break up compaction']\n    };\n    return tips[soilType] || [];\n  };\n  const getSoilColor = soilType => {\n    const colors = {\n      'clay': '#8B4513',\n      'sandy': '#F4A460',\n      'loamy': '#654321',\n      'silty': '#A0522D'\n    };\n    return colors[soilType] || '#8B4513';\n  };\n  const getWasteTypeIcon = wasteType => {\n    const icons = {\n      'vegetable': 'ü•¨',\n      'fruitpeel': 'üçé',\n      'garden': 'üåø',\n      'paper': 'üìÑ',\n      'cardboard': 'üì¶'\n    };\n    return icons[wasteType] || 'üóÇÔ∏è';\n  };\n  const getSoilIcon = soilType => {\n    const icons = {\n      'clay': 'üß±',\n      'sandy': 'üèñÔ∏è',\n      'loamy': 'üå±',\n      'silty': 'üíß'\n    };\n    return icons[soilType] || 'üåç';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"styles\", {\n      children: `\n      .soilAnalysisPage {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: #333;\n  background-color: #f9f9f9;\n}\n\n.pageTitle {\n  text-align: center;\n  color: #2c5e1a;\n  margin-bottom: 10px;\n  font-size: 2.2rem;\n  font-weight: 600;\n}\n\n.pageDescription {\n  text-align: center;\n  color: #666;\n  margin-bottom: 30px;\n  font-size: 1.1rem;\n  line-height: 1.5;\n}\n\n.userPointsBanner {\n  display: flex;\n  justify-content: space-between;\n  background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);\n  color: white;\n  padding: 15px 20px;\n  border-radius: 8px;\n  margin-bottom: 30px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.points {\n  font-weight: bold;\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 5px 10px;\n  border-radius: 20px;\n}\n\n.card {\n  background-color: white;\n  border-radius: 12px;\n  padding: 25px;\n  margin-bottom: 30px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n}\n\n.cardTitle {\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n  color: #2c5e1a;\n  border-bottom: 2px solid #e8f5e9;\n  padding-bottom: 10px;\n}\n\n.soilTypesGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 20px;\n  margin-bottom: 25px;\n}\n\n.soilTypeCard {\n  border: 2px solid #e0e0e0;\n  border-radius: 10px;\n  padding: 20px;\n  text-align: center;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  background-color: #fff;\n}\n\n.soilTypeCard:hover {\n  border-color: #4CAF50;\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n}\n\n.soilTypeCard.selected {\n  border-color: #4CAF50;\n  background-color: #f1f8e9;\n  box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);\n}\n\n.soilIcon {\n  font-size: 3rem;\n  margin-bottom: 15px;\n}\n\n.soilTypeCard h3 {\n  margin: 10px 0;\n  font-size: 1.2rem;\n}\n\n.soilDescription {\n  color: #666;\n  font-size: 0.9rem;\n  line-height: 1.4;\n  margin-bottom: 15px;\n}\n\n.soilCharacteristics {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n}\n\n.btn {\n  display: block;\n  width: 100%;\n  padding: 15px;\n  border: none;\n  border-radius: 8px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  margin-top: 15px;\n}\n\n.btnPrimary {\n  background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);\n  color: white;\n}\n\n.btnPrimary:hover {\n  background: linear-gradient(135deg, #43A047 0%, #1B5E20 100%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btnSecondary {\n  background: linear-gradient(135deg, #78909C 0%, #546E7A 100%);\n  color: white;\n}\n\n.btnSecondary:hover {\n  background: linear-gradient(135deg, #607D8B 0%, #455A64 100%);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btnDisabled {\n  background-color: #ccc;\n  color: #666;\n  cursor: not-allowed;\n}\n\n.analysisResults {\n  margin-top: 30px;\n}\n\n.resultTitle {\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 1.8rem;\n  font-weight: 600;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #e8f5e9;\n}\n\n.characteristicsGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 15px;\n}\n\n.characteristicItem {\n  background-color: #f5f5f5;\n  padding: 12px;\n  border-radius: 8px;\n  border-left: 4px solid #4CAF50;\n}\n\n.deficienciesList {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.deficiencyBadge {\n  background-color: #FFEBEE;\n  color: #C62828;\n  padding: 8px 15px;\n  border-radius: 20px;\n  font-size: 0.9rem;\n  font-weight: 500;\n}\n\n.recommendationsGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  gap: 25px;\n}\n\n.recommendationCard {\n  background-color: #f9f9f9;\n  border-radius: 10px;\n  padding: 20px;\n  position: relative;\n  transition: transform 0.3s ease;\n  border: 1px solid #e0e0e0;\n}\n\n.recommendationCard:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n}\n\n.priorityBadge {\n  position: absolute;\n  top: -10px;\n  right: 15px;\n  background-color: #F44336;\n  color: white;\n  padding: 5px 10px;\n  border-radius: 20px;\n  font-size: 0.7rem;\n  font-weight: bold;\n}\n\n.wasteIcon {\n  font-size: 2.5rem;\n  text-align: center;\n  margin-bottom: 15px;\n}\n\n.recommendationCard h4 {\n  text-align: center;\n  margin-bottom: 15px;\n  color: #2E7D32;\n  font-size: 1.2rem;\n}\n\n.nutrientsInfo {\n  background-color: white;\n  padding: 15px;\n  border-radius: 8px;\n  margin-top: 10px;\n}\n\n.nutrientsInfo h5 {\n  margin-bottom: 10px;\n  color: #2E7D32;\n  border-bottom: 1px solid #e0e0e0;\n  padding-bottom: 5px;\n}\n\n.nutrientsInfo p {\n  margin: 8px 0;\n  font-size: 0.9rem;\n}\n\n.tipsList {\n  padding-left: 20px;\n}\n\n.tipsList li {\n  margin-bottom: 10px;\n  line-height: 1.5;\n  padding-left: 10px;\n  position: relative;\n}\n\n.tipsList li::before {\n  content: \"üå±\";\n  position: absolute;\n  left: -20px;\n}\n\n.timelineGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  gap: 20px;\n}\n\n.timelineItem {\n  text-align: center;\n  padding: 15px;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n  transition: transform 0.3s ease;\n}\n\n.timelineItem:hover {\n  transform: scale(1.05);\n  background-color: #e8f5e9;\n}\n\n.timelineIcon {\n  font-size: 2rem;\n  margin-bottom: 10px;\n}\n\n.timelineName {\n  font-weight: 600;\n  margin-bottom: 5px;\n  color: #2E7D32;\n}\n\n.timelineDuration {\n  font-size: 0.9rem;\n  color: #666;\n}\n\n.actionButtons {\n  display: flex;\n  gap: 15px;\n  margin-top: 30px;\n}\n\n.actionButtons .btn {\n  width: auto;\n  flex: 1;\n}\n\n.educationalSection {\n  margin-top: 40px;\n}\n\n.educationalSection h2 {\n  text-align: center;\n  color: #2c5e1a;\n  margin-bottom: 30px;\n  font-size: 1.8rem;\n}\n\n.educationGrid {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  gap: 25px;\n}\n\n.educationCard {\n  background-color: white;\n  border-radius: 10px;\n  padding: 20px;\n  text-align: center;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n  transition: transform 0.3s ease;\n}\n\n.educationCard:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\n}\n\n.educationIcon {\n  font-size: 3rem;\n  margin-bottom: 15px;\n}\n\n.educationCard h3 {\n  margin: 10px 0;\n  font-size: 1.2rem;\n}\n\n.educationCard p {\n  color: #666;\n  font-size: 0.9rem;\n  line-height: 1.4;\n  margin-bottom: 15px;\n}\n\n.suitableWastes {\n  margin-top: 15px;\n}\n\n.wasteIcons {\n  margin-top: 10px;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  font-size: 1.5rem;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n  .soilTypesGrid,\n  .recommendationsGrid,\n  .educationGrid {\n    grid-template-columns: 1fr;\n  }\n  \n  .characteristicsGrid {\n    grid-template-columns: 1fr;\n  }\n  \n  .actionButtons {\n    flex-direction: column;\n  }\n  \n  .timelineGrid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n@media (max-width: 480px) {\n  .soilAnalysisPage {\n    padding: 15px;\n  }\n  \n  .pageTitle {\n    font-size: 1.8rem;\n  }\n  \n  .card {\n    padding: 15px;\n  }\n  \n  .timelineGrid {\n    grid-template-columns: 1fr;\n  }\n}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.soilAnalysisPage,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.pageTitle,\n        children: \"Soil Analysis & Waste Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.pageDescription,\n        children: \"Analyze your soil type and get personalized waste composting recommendations for optimal plant growth.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userPointsBanner,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Welcome, \", user.name || user.email, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.points,\n          children: [\"Points: \", user.points || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.cardTitle,\n          children: \"Select Your Soil Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.soilTypesGrid,\n          children: Object.entries(soilDb).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setSelectedSoil(key),\n            className: `${styles.soilTypeCard} ${selectedSoil === key ? styles.selected : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.soilIcon,\n              style: {\n                color: getSoilColor(key)\n              },\n              children: getSoilIcon(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: getSoilColor(key)\n              },\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.soilDescription,\n              children: value.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.soilCharacteristics,\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Drainage: \", value.characteristics.Drainage]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"pH: \", value.characteristics['pH Range']]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: analyzeSoil,\n          disabled: !selectedSoil || loading,\n          className: `${styles.btn} ${selectedSoil && !loading ? styles.btnPrimary : styles.btnDisabled}`,\n          children: loading ? 'Analyzing Soil...' : `Analyze ${selectedSoil ? soilDb[selectedSoil].name : 'Soil'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 7\n      }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.analysisResults,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.resultTitle,\n          style: {\n            color: getSoilColor(analysisResult.soilType)\n          },\n          children: [getSoilIcon(analysisResult.soilType), \" \", analysisResult.soilName, \" Analysis Results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardTitle,\n            children: \"Soil Characteristics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.soilDescription,\n            children: analysisResult.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.characteristicsGrid,\n            children: Object.entries(analysisResult.characteristics).map(([char, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.characteristicItem,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [char, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), \" \", value]\n            }, char, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardTitle,\n            children: \"Common Deficiencies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.deficienciesList,\n            children: analysisResult.deficiencies.map((deficiency, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.deficiencyBadge,\n              children: deficiency\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardTitle,\n            children: \"Recommended Waste Types for Composting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.recommendationsGrid,\n            children: analysisResult.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.recommendationCard,\n              children: [rec.priority > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.priorityBadge,\n                children: \"HIGH PRIORITY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.wasteIcon,\n                children: getWasteTypeIcon(rec.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [rec.name, \" Waste\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.nutrientsInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Nutrient Content:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 764,\n                  columnNumber: 21\n                }, this), Object.entries(rec.nutrients).map(([nutrient, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [nutrient, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 25\n                  }, this), \" \", value]\n                }, nutrient, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardTitle,\n            children: \"Soil Improvement Tips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: styles.tipsList,\n            children: analysisResult.improvementTips.map((tip, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: tip\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardTitle,\n            children: \"Estimated Composting Timeline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timelineGrid,\n            children: analysisResult.recommendations.map((rec, index) => {\n              const timelines = {\n                'vegetable': '2-4 weeks',\n                'fruitpeel': '3-6 weeks',\n                'garden': '4-8 weeks',\n                'paper': '2-6 months',\n                'cardboard': '4-12 months'\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.timelineItem,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.timelineIcon,\n                  children: getWasteTypeIcon(rec.type)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.timelineName,\n                  children: rec.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 804,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.timelineDuration,\n                  children: timelines[rec.type]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 805,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.actionButtons,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setAnalysisResult(null),\n            className: `${styles.btn} ${styles.btnSecondary}`,\n            children: \"Analyze Another Soil Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.print(),\n            className: `${styles.btn} ${styles.btnPrimary}`,\n            children: \"Print Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), !analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.educationalSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Learn About Soil Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.educationGrid,\n          children: Object.entries(soilDb).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.educationCard,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.educationIcon,\n              style: {\n                color: getSoilColor(key)\n              },\n              children: getSoilIcon(key)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: getSoilColor(key)\n              },\n              children: value.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: value.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.suitableWastes,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Best for:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 848,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.wasteIcons,\n                children: value.suitable_wastes.map(waste => /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: getWasteTypeIcon(waste)\n                }, waste, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 851,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 17\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(SoilAnalysis, \"CMCIibwXXNat2MTUbGukWlONJ9U=\");\n_c = SoilAnalysis;\nexport default SoilAnalysis;\nvar _c;\n$RefreshReg$(_c, \"SoilAnalysis\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SoilAnalysis","user","_s","selectedSoil","setSelectedSoil","analysisResult","setAnalysisResult","loading","setLoading","soilDb","name","description","deficiencies","suitable_wastes","characteristics","nutrientDb","analyzeSoil","alert","formData","FormData","append","response","fetch","method","body","ok","processLocalSoilAnalysis","error","console","soilData","recommendations","map","wasteType","type","charAt","toUpperCase","slice","nutrients","priority","calculatePriority","sort","a","b","soilType","soilName","improvementTips","getImprovementTips","wasteNutrients","forEach","deficiency","Object","keys","nutrient","includes","split","tips","getSoilColor","colors","getWasteTypeIcon","icons","getSoilIcon","children","fileName","_jsxFileName","lineNumber","columnNumber","className","styles","soilAnalysisPage","pageTitle","pageDescription","userPointsBanner","email","points","card","cardTitle","soilTypesGrid","entries","key","value","onClick","soilTypeCard","selected","soilIcon","style","color","soilDescription","soilCharacteristics","Drainage","disabled","btn","btnPrimary","btnDisabled","analysisResults","resultTitle","characteristicsGrid","char","characteristicItem","deficienciesList","index","deficiencyBadge","recommendationsGrid","rec","recommendationCard","priorityBadge","wasteIcon","nutrientsInfo","tipsList","tip","timelineGrid","timelines","timelineItem","timelineIcon","timelineName","timelineDuration","actionButtons","btnSecondary","window","print","educationalSection","educationGrid","educationCard","educationIcon","suitableWastes","wasteIcons","waste","_c","$RefreshReg$"],"sources":["C:/Users/shrad/OneDrive/Desktop/study/garbage_segregation/frontend/src/pages/SoilAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SoilAnalysis = ({ user }) => {\r\n  const [selectedSoil, setSelectedSoil] = useState('');\r\n  const [analysisResult, setAnalysisResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Soil database (same as in Flask app)\r\n  const soilDb = {\r\n    'clay': {\r\n      name: 'Clay Soil',\r\n      description: 'Fine particles, poor drainage, nutrient-rich but hard for roots to penetrate',\r\n      deficiencies: ['Nitrogen (N)', 'Phosphorus (P)', 'Organic Matter'],\r\n      suitable_wastes: ['fruitpeel', 'vegetable', 'garden'],\r\n      characteristics: {\r\n        'Drainage': 'Poor',\r\n        'Water Retention': 'High',\r\n        'Nutrient Retention': 'High',\r\n        'pH Range': '6.0-7.5',\r\n        'Texture': 'Fine, sticky when wet'\r\n      }\r\n    },\r\n    'sandy': {\r\n      name: 'Sandy Soil',\r\n      description: 'Large particles, excellent drainage, low nutrient retention',\r\n      deficiencies: ['Potassium (K)', 'Magnesium (Mg)', 'Water Retention'],\r\n      suitable_wastes: ['cardboard', 'paper', 'garden'],\r\n      characteristics: {\r\n        'Drainage': 'Excellent',\r\n        'Water Retention': 'Low',\r\n        'Nutrient Retention': 'Low',\r\n        'pH Range': '6.0-7.0',\r\n        'Texture': 'Coarse, gritty'\r\n      }\r\n    },\r\n    'loamy': {\r\n      name: 'Loamy Soil',\r\n      description: 'Perfect balance of sand, silt, and clay - ideal for most plants',\r\n      deficiencies: ['Calcium (Ca)', 'Sulfur (S)'],\r\n      suitable_wastes: ['vegetable', 'fruitpeel'],\r\n      characteristics: {\r\n        'Drainage': 'Good',\r\n        'Water Retention': 'Moderate',\r\n        'Nutrient Retention': 'Good',\r\n        'pH Range': '6.0-7.0',\r\n        'Texture': 'Smooth, slightly gritty'\r\n      }\r\n    },\r\n    'silty': {\r\n      name: 'Silty Soil',\r\n      description: 'Medium-sized particles, good water retention, fertile but can compact',\r\n      deficiencies: ['Zinc (Zn)', 'Manganese (Mn)'],\r\n      suitable_wastes: ['fruitpeel', 'garden'],\r\n      characteristics: {\r\n        'Drainage': 'Moderate',\r\n        'Water Retention': 'Good',\r\n        'Nutrient Retention': 'High',\r\n        'pH Range': '6.5-7.5',\r\n        'Texture': 'Smooth, flour-like when dry'\r\n      }\r\n    }\r\n  };\r\n\r\n  // Nutrient database for waste types\r\n  const nutrientDb = {\r\n    'vegetable': {\r\n      'Nitrogen (N)': '2.5-4% of dry weight',\r\n      'Phosphorus (P)': '0.3-0.8% of dry weight',\r\n      'Potassium (K)': '3-6% of dry weight',\r\n      'Carbon:Nitrogen (C:N)': '15:1 (Ideal for composting)',\r\n      'Benefits': 'Quick decomposition, balanced nutrients for plant growth'\r\n    },\r\n    'fruitpeel': {\r\n      'Nitrogen (N)': '1.5-3% of dry weight',\r\n      'Potassium (K)': '8-12% of dry weight',\r\n      'Calcium (Ca)': '0.5-2% of dry weight',\r\n      'Benefits': 'High potassium for flower and fruit development'\r\n    },\r\n    'garden': {\r\n      'Nitrogen (N)': '1.5-3% of dry weight',\r\n      'Phosphorus (P)': '0.2-0.5% of dry weight',\r\n      'Silica (Si)': '2-5% (Strengthens plant cells)',\r\n      'Benefits': 'Improves soil structure and plant disease resistance'\r\n    },\r\n    'paper': {\r\n      'Carbon:Nitrogen (C:N)': '200:1 (High carbon)',\r\n      'Lignin Content': '20-30% (Slow to decompose)',\r\n      'Benefits': 'Excellent brown material for composting, improves soil structure'\r\n    },\r\n    'cardboard': {\r\n      'Carbon:Nitrogen (C:N)': '350:1 (Very high carbon)',\r\n      'Lignin Content': '25-35%',\r\n      'Benefits': 'Long-term soil conditioning, moisture retention'\r\n    }\r\n  };\r\n\r\n  const analyzeSoil = async () => {\r\n    if (!selectedSoil) {\r\n      alert('Please select a soil type first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Try to call the Flask API\r\n      const formData = new FormData();\r\n      formData.append('soil_type', selectedSoil);\r\n      formData.append('analysis_type', 'soil');\r\n\r\n      const response = await fetch('http://localhost:5000/predict', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        processLocalSoilAnalysis();\r\n      } else {\r\n        processLocalSoilAnalysis();\r\n      }\r\n    } catch (error) {\r\n      console.error('API call failed, using local analysis:', error);\r\n      processLocalSoilAnalysis();\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const processLocalSoilAnalysis = () => {\r\n    const soilData = soilDb[selectedSoil];\r\n    \r\n    const recommendations = soilData.suitable_wastes.map(wasteType => ({\r\n      type: wasteType,\r\n      name: wasteType.charAt(0).toUpperCase() + wasteType.slice(1),\r\n      nutrients: nutrientDb[wasteType] || {},\r\n      priority: calculatePriority(wasteType, soilData.deficiencies)\r\n    }));\r\n\r\n    // Sort recommendations by priority\r\n    recommendations.sort((a, b) => b.priority - a.priority);\r\n\r\n    setAnalysisResult({\r\n      soilType: selectedSoil,\r\n      soilName: soilData.name,\r\n      description: soilData.description,\r\n      deficiencies: soilData.deficiencies,\r\n      characteristics: soilData.characteristics,\r\n      recommendations: recommendations,\r\n      improvementTips: getImprovementTips(selectedSoil)\r\n    });\r\n  };\r\n\r\n  const calculatePriority = (wasteType, deficiencies) => {\r\n    const wasteNutrients = nutrientDb[wasteType] || {};\r\n    let priority = 0;\r\n    \r\n    deficiencies.forEach(deficiency => {\r\n      Object.keys(wasteNutrients).forEach(nutrient => {\r\n        if (nutrient.includes(deficiency.split(' ')[0])) {\r\n          priority += 1;\r\n        }\r\n      });\r\n    });\r\n    \r\n    return priority;\r\n  };\r\n\r\n  const getImprovementTips = (soilType) => {\r\n    const tips = {\r\n      'clay': [\r\n        'Add organic matter like compost to improve drainage',\r\n        'Use raised beds to prevent waterlogging',\r\n        'Add coarse sand or perlite to improve aeration',\r\n        'Avoid walking on clay soil when wet',\r\n        'Plant cover crops to improve soil structure'\r\n      ],\r\n      'sandy': [\r\n        'Add organic matter frequently to retain nutrients',\r\n        'Use mulch to prevent water evaporation',\r\n        'Consider slow-release fertilizers',\r\n        'Plant nitrogen-fixing cover crops',\r\n        'Water more frequently but with less volume'\r\n      ],\r\n      'loamy': [\r\n        'Maintain organic matter levels with regular compost',\r\n        'Rotate crops to prevent nutrient depletion',\r\n        'Test pH regularly and adjust as needed',\r\n        'Use balanced fertilizers sparingly',\r\n        'Continue sustainable practices'\r\n      ],\r\n      'silty': [\r\n        'Improve drainage with organic matter',\r\n        'Avoid compaction by minimizing foot traffic',\r\n        'Add coarse materials like sand or compost',\r\n        'Use raised beds if drainage is poor',\r\n        'Plant deep-rooted plants to break up compaction'\r\n      ]\r\n    };\r\n\r\n    return tips[soilType] || [];\r\n  };\r\n\r\n  const getSoilColor = (soilType) => {\r\n    const colors = {\r\n      'clay': '#8B4513',\r\n      'sandy': '#F4A460',\r\n      'loamy': '#654321',\r\n      'silty': '#A0522D'\r\n    };\r\n    return colors[soilType] || '#8B4513';\r\n  };\r\n\r\n  const getWasteTypeIcon = (wasteType) => {\r\n    const icons = {\r\n      'vegetable': 'ü•¨',\r\n      'fruitpeel': 'üçé',\r\n      'garden': 'üåø',\r\n      'paper': 'üìÑ',\r\n      'cardboard': 'üì¶'\r\n    };\r\n    return icons[wasteType] || 'üóÇÔ∏è';\r\n  };\r\n\r\n  const getSoilIcon = (soilType) => {\r\n    const icons = {\r\n      'clay': 'üß±',\r\n      'sandy': 'üèñÔ∏è',\r\n      'loamy': 'üå±',\r\n      'silty': 'üíß'\r\n    };\r\n    return icons[soilType] || 'üåç';\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <styles>{\r\n      `\r\n      .soilAnalysisPage {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  color: #333;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.pageTitle {\r\n  text-align: center;\r\n  color: #2c5e1a;\r\n  margin-bottom: 10px;\r\n  font-size: 2.2rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.pageDescription {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-bottom: 30px;\r\n  font-size: 1.1rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n.userPointsBanner {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);\r\n  color: white;\r\n  padding: 15px 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 30px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.points {\r\n  font-weight: bold;\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n}\r\n\r\n.card {\r\n  background-color: white;\r\n  border-radius: 12px;\r\n  padding: 25px;\r\n  margin-bottom: 30px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.cardTitle {\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  margin-bottom: 20px;\r\n  color: #2c5e1a;\r\n  border-bottom: 2px solid #e8f5e9;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.soilTypesGrid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.soilTypeCard {\r\n  border: 2px solid #e0e0e0;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  background-color: #fff;\r\n}\r\n\r\n.soilTypeCard:hover {\r\n  border-color: #4CAF50;\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.soilTypeCard.selected {\r\n  border-color: #4CAF50;\r\n  background-color: #f1f8e9;\r\n  box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\n.soilIcon {\r\n  font-size: 3rem;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.soilTypeCard h3 {\r\n  margin: 10px 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.soilDescription {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.soilCharacteristics {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n}\r\n\r\n.btn {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 15px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  margin-top: 15px;\r\n}\r\n\r\n.btnPrimary {\r\n  background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);\r\n  color: white;\r\n}\r\n\r\n.btnPrimary:hover {\r\n  background: linear-gradient(135deg, #43A047 0%, #1B5E20 100%);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.btnSecondary {\r\n  background: linear-gradient(135deg, #78909C 0%, #546E7A 100%);\r\n  color: white;\r\n}\r\n\r\n.btnSecondary:hover {\r\n  background: linear-gradient(135deg, #607D8B 0%, #455A64 100%);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.btnDisabled {\r\n  background-color: #ccc;\r\n  color: #666;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.analysisResults {\r\n  margin-top: 30px;\r\n}\r\n\r\n.resultTitle {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  padding-bottom: 15px;\r\n  border-bottom: 2px solid #e8f5e9;\r\n}\r\n\r\n.characteristicsGrid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 15px;\r\n}\r\n\r\n.characteristicItem {\r\n  background-color: #f5f5f5;\r\n  padding: 12px;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #4CAF50;\r\n}\r\n\r\n.deficienciesList {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.deficiencyBadge {\r\n  background-color: #FFEBEE;\r\n  color: #C62828;\r\n  padding: 8px 15px;\r\n  border-radius: 20px;\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.recommendationsGrid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  gap: 25px;\r\n}\r\n\r\n.recommendationCard {\r\n  background-color: #f9f9f9;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  position: relative;\r\n  transition: transform 0.3s ease;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.recommendationCard:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.priorityBadge {\r\n  position: absolute;\r\n  top: -10px;\r\n  right: 15px;\r\n  background-color: #F44336;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 20px;\r\n  font-size: 0.7rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.wasteIcon {\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.recommendationCard h4 {\r\n  text-align: center;\r\n  margin-bottom: 15px;\r\n  color: #2E7D32;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.nutrientsInfo {\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n}\r\n\r\n.nutrientsInfo h5 {\r\n  margin-bottom: 10px;\r\n  color: #2E7D32;\r\n  border-bottom: 1px solid #e0e0e0;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.nutrientsInfo p {\r\n  margin: 8px 0;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.tipsList {\r\n  padding-left: 20px;\r\n}\r\n\r\n.tipsList li {\r\n  margin-bottom: 10px;\r\n  line-height: 1.5;\r\n  padding-left: 10px;\r\n  position: relative;\r\n}\r\n\r\n.tipsList li::before {\r\n  content: \"üå±\";\r\n  position: absolute;\r\n  left: -20px;\r\n}\r\n\r\n.timelineGrid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.timelineItem {\r\n  text-align: center;\r\n  padding: 15px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.timelineItem:hover {\r\n  transform: scale(1.05);\r\n  background-color: #e8f5e9;\r\n}\r\n\r\n.timelineIcon {\r\n  font-size: 2rem;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.timelineName {\r\n  font-weight: 600;\r\n  margin-bottom: 5px;\r\n  color: #2E7D32;\r\n}\r\n\r\n.timelineDuration {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n}\r\n\r\n.actionButtons {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.actionButtons .btn {\r\n  width: auto;\r\n  flex: 1;\r\n}\r\n\r\n.educationalSection {\r\n  margin-top: 40px;\r\n}\r\n\r\n.educationalSection h2 {\r\n  text-align: center;\r\n  color: #2c5e1a;\r\n  margin-bottom: 30px;\r\n  font-size: 1.8rem;\r\n}\r\n\r\n.educationGrid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 25px;\r\n}\r\n\r\n.educationCard {\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  text-align: center;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\r\n  transition: transform 0.3s ease;\r\n}\r\n\r\n.educationCard:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.educationIcon {\r\n  font-size: 3rem;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.educationCard h3 {\r\n  margin: 10px 0;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.educationCard p {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.suitableWastes {\r\n  margin-top: 15px;\r\n}\r\n\r\n.wasteIcons {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n/* Responsive adjustments */\r\n@media (max-width: 768px) {\r\n  .soilTypesGrid,\r\n  .recommendationsGrid,\r\n  .educationGrid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .characteristicsGrid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .actionButtons {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .timelineGrid {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .soilAnalysisPage {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .pageTitle {\r\n    font-size: 1.8rem;\r\n  }\r\n  \r\n  .card {\r\n    padding: 15px;\r\n  }\r\n  \r\n  .timelineGrid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}`}\r\n\r\n    </styles>\r\n    \r\n    <div className={styles.soilAnalysisPage}>\r\n      <h1 className={styles.pageTitle}>Soil Analysis & Waste Recommendations</h1>\r\n      <p className={styles.pageDescription}>\r\n        Analyze your soil type and get personalized waste composting recommendations for optimal plant growth.\r\n      </p>\r\n\r\n      {/* User Info */}\r\n      <div className={styles.userPointsBanner}>\r\n        <span>Welcome, {user.name || user.email}!</span>\r\n        <span className={styles.points}>Points: {user.points || 0}</span>\r\n      </div>\r\n\r\n      {/* Soil Type Selection */}\r\n      <div className={styles.card}>\r\n        <div className={styles.cardTitle}>Select Your Soil Type</div>\r\n        \r\n        <div className={styles.soilTypesGrid}>\r\n          {Object.entries(soilDb).map(([key, value]) => (\r\n            <div \r\n              key={key}\r\n              onClick={() => setSelectedSoil(key)}\r\n              className={`${styles.soilTypeCard} ${selectedSoil === key ? styles.selected : ''}`}\r\n            >\r\n              <div className={styles.soilIcon} style={{ color: getSoilColor(key) }}>\r\n                {getSoilIcon(key)}\r\n              </div>\r\n              <h3 style={{ color: getSoilColor(key) }}>\r\n                {value.name}\r\n              </h3>\r\n              <p className={styles.soilDescription}>\r\n                {value.description}\r\n              </p>\r\n              <div className={styles.soilCharacteristics}>\r\n                <small>Drainage: {value.characteristics.Drainage}</small>\r\n                <small>pH: {value.characteristics['pH Range']}</small>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <button \r\n          onClick={analyzeSoil}\r\n          disabled={!selectedSoil || loading}\r\n          className={`${styles.btn} ${selectedSoil && !loading ? styles.btnPrimary : styles.btnDisabled}`}\r\n        >\r\n          {loading ? 'Analyzing Soil...' : `Analyze ${selectedSoil ? soilDb[selectedSoil].name : 'Soil'}`}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Analysis Results */}\r\n      {analysisResult && (\r\n        <div className={styles.analysisResults}>\r\n          <h2 className={styles.resultTitle} style={{ color: getSoilColor(analysisResult.soilType) }}>\r\n            {getSoilIcon(analysisResult.soilType)} {analysisResult.soilName} Analysis Results\r\n          </h2>\r\n\r\n          {/* Soil Characteristics */}\r\n          <div className={styles.card}>\r\n            <div className={styles.cardTitle}>Soil Characteristics</div>\r\n            <p className={styles.soilDescription}>{analysisResult.description}</p>\r\n            <div className={styles.characteristicsGrid}>\r\n              {Object.entries(analysisResult.characteristics).map(([char, value]) => (\r\n                <div key={char} className={styles.characteristicItem}>\r\n                  <strong>{char}:</strong> {value}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Nutrient Deficiencies */}\r\n          <div className={styles.card}>\r\n            <div className={styles.cardTitle}>Common Deficiencies</div>\r\n            <div className={styles.deficienciesList}>\r\n              {analysisResult.deficiencies.map((deficiency, index) => (\r\n                <span key={index} className={styles.deficiencyBadge}>\r\n                  {deficiency}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Waste Recommendations */}\r\n          <div className={styles.card}>\r\n            <div className={styles.cardTitle}>Recommended Waste Types for Composting</div>\r\n            <div className={styles.recommendationsGrid}>\r\n              {analysisResult.recommendations.map((rec, index) => (\r\n                <div \r\n                  key={index}\r\n                  className={styles.recommendationCard}\r\n                >\r\n                  {rec.priority > 0 && (\r\n                    <div className={styles.priorityBadge}>HIGH PRIORITY</div>\r\n                  )}\r\n                  \r\n                  <div className={styles.wasteIcon}>\r\n                    {getWasteTypeIcon(rec.type)}\r\n                  </div>\r\n                  <h4>{rec.name} Waste</h4>\r\n\r\n                  <div className={styles.nutrientsInfo}>\r\n                    <h5>Nutrient Content:</h5>\r\n                    {Object.entries(rec.nutrients).map(([nutrient, value]) => (\r\n                      <p key={nutrient}>\r\n                        <strong>{nutrient}:</strong> {value}\r\n                      </p>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Improvement Tips */}\r\n          <div className={styles.card}>\r\n            <div className={styles.cardTitle}>Soil Improvement Tips</div>\r\n            <ul className={styles.tipsList}>\r\n              {analysisResult.improvementTips.map((tip, index) => (\r\n                <li key={index}>{tip}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Composting Timeline */}\r\n          <div className={styles.card}>\r\n            <div className={styles.cardTitle}>Estimated Composting Timeline</div>\r\n            <div className={styles.timelineGrid}>\r\n              {analysisResult.recommendations.map((rec, index) => {\r\n                const timelines = {\r\n                  'vegetable': '2-4 weeks',\r\n                  'fruitpeel': '3-6 weeks',\r\n                  'garden': '4-8 weeks',\r\n                  'paper': '2-6 months',\r\n                  'cardboard': '4-12 months'\r\n                };\r\n                \r\n                return (\r\n                  <div key={index} className={styles.timelineItem}>\r\n                    <div className={styles.timelineIcon}>\r\n                      {getWasteTypeIcon(rec.type)}\r\n                    </div>\r\n                    <div className={styles.timelineName}>{rec.name}</div>\r\n                    <div className={styles.timelineDuration}>\r\n                      {timelines[rec.type]}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action Buttons */}\r\n          <div className={styles.actionButtons}>\r\n            <button\r\n              onClick={() => setAnalysisResult(null)}\r\n              className={`${styles.btn} ${styles.btnSecondary}`}\r\n            >\r\n              Analyze Another Soil Type\r\n            </button>\r\n            <button\r\n              onClick={() => window.print()}\r\n              className={`${styles.btn} ${styles.btnPrimary}`}\r\n            >\r\n              Print Analysis\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Educational Section */}\r\n      {!analysisResult && (\r\n        <div className={styles.educationalSection}>\r\n          <h2>Learn About Soil Types</h2>\r\n          \r\n          <div className={styles.educationGrid}>\r\n            {Object.entries(soilDb).map(([key, value]) => (\r\n              <div key={key} className={styles.educationCard}>\r\n                <div className={styles.educationIcon} style={{ color: getSoilColor(key) }}>\r\n                  {getSoilIcon(key)}\r\n                </div>\r\n                <h3 style={{ color: getSoilColor(key) }}>\r\n                  {value.name}\r\n                </h3>\r\n                <p>{value.description}</p>\r\n                <div className={styles.suitableWastes}>\r\n                  <strong>Best for:</strong>\r\n                  <div className={styles.wasteIcons}>\r\n                    {value.suitable_wastes.map(waste => \r\n                      <span key={waste}>{getWasteTypeIcon(waste)}</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SoilAnalysis;"],"mappings":"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3B,SAAS,CAAC,IAAI,KAAK;EAClC,CAAC;EAED,MAAM4B,WAAW,GAAIjB,QAAQ,IAAK;IAChC,MAAMgB,KAAK,GAAG;MACZ,MAAM,EAAE,IAAI;MACZ,OAAO,EAAE,KAAK;MACd,OAAO,EAAE,IAAI;MACb,OAAO,EAAE;IACX,CAAC;IACD,OAAOA,KAAK,CAAChB,QAAQ,CAAC,IAAI,IAAI;EAChC,CAAC;EAED,oBACE9C,OAAA,CAAAE,SAAA;IAAA8D,QAAA,gBACAhE,OAAA;MAAAgE,QAAA,EACE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}