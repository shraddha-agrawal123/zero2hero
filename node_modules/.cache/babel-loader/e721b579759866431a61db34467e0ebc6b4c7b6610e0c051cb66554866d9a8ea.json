{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrad\\\\OneDrive\\\\Desktop\\\\study\\\\garbage_segregation\\\\frontend\\\\src\\\\pages\\\\WasteClassification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WasteClassification = ({\n  user\n}) => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [imageFile, setImageFile] = useState(null);\n  const [soilType, setSoilType] = useState('loamy');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Soil database\n  const soilDb = {\n    'clay': {\n      name: 'Clay Soil'\n    },\n    'sandy': {\n      name: 'Sandy Soil'\n    },\n    'loamy': {\n      name: 'Loamy Soil'\n    },\n    'silty': {\n      name: 'Silty Soil'\n    }\n  };\n\n  // Nutrient database\n  const nutrientDb = {\n    'vegetable': {\n      'Nitrogen (N)': '2.5-4% of dry weight',\n      'Phosphorus (P)': '0.3-0.8% of dry weight',\n      'Potassium (K)': '3-6% of dry weight',\n      'Carbon:Nitrogen (C:N)': '15:1 (Ideal for composting)'\n    },\n    'fruitpeel': {\n      'Nitrogen (N)': '1.5-3% of dry weight',\n      'Potassium (K)': '8-12% of dry weight',\n      'Calcium (Ca)': '0.5-2% of dry weight'\n    },\n    'garden': {\n      'Nitrogen (N)': '1.5-3% of dry weight',\n      'Phosphorus (P)': '0.2-0.5% of dry weight',\n      'Silica (Si)': '2-5% (Strengthens plant cells)'\n    },\n    'paper': {\n      'Carbon:Nitrogen (C:N)': '200:1 (High carbon)',\n      'Lignin Content': '20-30% (Slow to decompose)'\n    },\n    'cardboard': {\n      'Carbon:Nitrogen (C:N)': '350:1 (Very high carbon)',\n      'Lignin Content': '25-35%'\n    }\n  };\n  const handleImageUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageFile(file);\n      const reader = new FileReader();\n      reader.onload = event => {\n        setImage(event.target.result);\n      };\n      reader.readAsDataURL(file);\n      setResult(null);\n    }\n  };\n  const handleCameraCapture = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = 'image/*';\n    input.capture = 'environment';\n    input.onchange = handleImageUpload;\n    input.click();\n  };\n  const classifyWaste = async () => {\n    if (!imageFile) {\n      alert('Please upload an image first');\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('file', imageFile);\n      formData.append('soil_type', soilType);\n      formData.append('analysis_type', 'waste');\n      const classifyResponse = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        body: formData\n      });\n      if (classifyResponse.ok) {\n        await classifyWasteAPI();\n      } else {\n        simulateClassification();\n      }\n    } catch (error) {\n      console.error('Classification error:', error);\n      simulateClassification();\n    }\n    setLoading(false);\n  };\n  const classifyWasteAPI = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('file', imageFile);\n      const response = await fetch('http://localhost:5000/api/classify-simple', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const wasteType = data.predicted_class;\n        const confidence = data.confidence;\n        const isBiodegradable = !['plastic', 'trash'].includes(wasteType);\n        const nutrients = nutrientDb[wasteType] || {};\n        setResult({\n          class: wasteType,\n          confidence: (confidence * 100).toFixed(2),\n          biodegradable: isBiodegradable,\n          message: isBiodegradable ? 'Biodegradable! Good for composting.' : 'Non-biodegradable! Dispose properly.',\n          nutrients: nutrients,\n          soilType: soilType\n        });\n      }\n    } catch (error) {\n      console.error('API Classification error:', error);\n      simulateClassification();\n    }\n  };\n  const simulateClassification = () => {\n    const wasteTypes = ['vegetable', 'fruitpeel', 'garden', 'paper', 'cardboard', 'plastic', 'trash'];\n    const randomType = wasteTypes[Math.floor(Math.random() * wasteTypes.length)];\n    const confidence = (Math.random() * 30 + 70).toFixed(2);\n    const isBiodegradable = !['plastic', 'trash'].includes(randomType);\n    const nutrients = nutrientDb[randomType] || {};\n    setResult({\n      class: randomType,\n      confidence: confidence,\n      biodegradable: isBiodegradable,\n      message: isBiodegradable ? 'Biodegradable! Good for composting.' : 'Non-biodegradable! Dispose properly.',\n      nutrients: nutrients,\n      soilType: soilType\n    });\n  };\n  const getSoilRecommendations = (wasteType, soilType) => {\n    const soilDeficiencies = {\n      'clay': ['Nitrogen (N)', 'Phosphorus (P)', 'Organic Matter'],\n      'sandy': ['Potassium (K)', 'Magnesium (Mg)', 'Water Retention'],\n      'loamy': ['Calcium (Ca)', 'Sulfur (S)'],\n      'silty': ['Zinc (Zn)', 'Manganese (Mn)']\n    };\n    const wasteNutrients = nutrientDb[wasteType] || {};\n    const soilNeeds = soilDeficiencies[soilType] || [];\n    const recommendations = [];\n    Object.keys(wasteNutrients).forEach(nutrient => {\n      const isNeeded = soilNeeds.some(need => nutrient.startsWith(need));\n      if (isNeeded) {\n        recommendations.push(`${nutrient}: ${wasteNutrients[nutrient]}`);\n      }\n    });\n    return recommendations.length > 0 ? recommendations : [\"No significant nutrient match for this soil type\"];\n  };\n  const getWasteIcon = wasteType => {\n    const icons = {\n      'vegetable': '🥬',\n      'fruitpeel': '🍎',\n      'garden': '🌿',\n      'paper': '📄',\n      'cardboard': '📦',\n      'plastic': '🥤',\n      'trash': '🗑️'\n    };\n    return icons[wasteType] || '🗑️';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"waste-classification-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Waste Classification & Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page-description\",\n      children: \"Upload an image of waste to get AI-powered classification and soil recommendations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-points-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Welcome, \", user.name || user.email, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"points\",\n        children: [\"Points: \", user.points || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: \"Upload Waste Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-container\",\n          onClick: () => document.getElementById('image-upload').click(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: image ? 'Image selected - Click to change' : 'Click to upload waste image'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image-upload\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"camera-btn\",\n          onClick: handleCameraCapture,\n          children: \"\\uD83D\\uDCF8 Use Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Uploaded waste\",\n          className: \"preview-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"remove-image\",\n          onClick: () => {\n            setImage(null);\n            setImageFile(null);\n            setResult(null);\n            document.getElementById('image-upload').value = '';\n          },\n          children: \"Remove Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: \"Select Your Soil Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: soilType,\n        onChange: e => setSoilType(e.target.value),\n        className: \"form-select\",\n        children: Object.entries(soilDb).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: value.name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: classifyWaste,\n      disabled: !image || loading,\n      className: `btn ${image && !loading ? 'btn-primary' : 'btn-disabled'}`,\n      children: loading ? 'Analyzing...' : 'Classify Waste'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `results-card ${result.biodegradable ? 'biodegradable' : 'non-biodegradable'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Classification Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-icon\",\n          children: getWasteIcon(result.class)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-label\",\n            children: \"Waste Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-value\",\n            children: result.class.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-label\",\n            children: \"Confidence:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-value\",\n            children: [result.confidence, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"result-label\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `result-value ${result.biodegradable ? 'biodegradable' : 'non-biodegradable'}`,\n            children: result.biodegradable ? '✅ Biodegradable' : '🚫 Non-biodegradable'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: result.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this), Object.keys(result.nutrients).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nutrients-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nutrient Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nutrients-grid\",\n          children: Object.entries(result.nutrients).map(([nutrient, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nutrient-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [nutrient, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this), \" \", value]\n          }, nutrient, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this), result.biodegradable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendations-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Recommendations for \", soilDb[result.soilType].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendations-list\",\n          children: getSoilRecommendations(result.class, result.soilType).map((rec, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendation-item\",\n            children: rec\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"composting-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Composting Tips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Mix with brown materials (dry leaves, paper) for better decomposition\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Maintain proper moisture levels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Turn compost regularly for aeration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Ideal temperature: 140-160\\xB0F (60-71\\xB0C)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, this), !result.biodegradable && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disposal-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Proper Disposal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disposal-tips\",\n          children: [result.class === 'plastic' && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Check recycling number on the plastic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Clean before recycling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Take to designated recycling centers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this), result.class === 'trash' && /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Dispose in general waste bin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Consider if any parts can be recycled separately\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Reduce usage of such items in future\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: () => {\n          setResult(null);\n          setImage(null);\n          setImageFile(null);\n          document.getElementById('image-upload').value = '';\n        },\n        children: \"Classify Another Item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this), !result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"educational-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How It Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how-it-works-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Take or upload a clear photo of the waste item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"AI Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our AI model classifies the waste type and determines biodegradability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Get Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Receive personalized composting or disposal recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tips-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Classification Tips\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tips-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tip-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tip-icon\",\n              children: \"\\uD83D\\uDCF7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Good Photos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Take clear, well-lit photos with the waste item filling most of the frame\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tip-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tip-icon\",\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Single Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Focus on one type of waste at a time for best accuracy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tip-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tip-icon\",\n              children: \"\\uD83C\\uDF0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Clean Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Clean items are easier to classify and provide better results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(WasteClassification, \"IY7Ufa8mGGSCO+VO/8lXgImrQiY=\");\n_c = WasteClassification;\nexport default WasteClassification;\nvar _c;\n$RefreshReg$(_c, \"WasteClassification\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WasteClassification","user","_s","image","setImage","imageFile","setImageFile","soilType","setSoilType","result","setResult","loading","setLoading","soilDb","name","nutrientDb","handleImageUpload","e","file","target","files","reader","FileReader","onload","event","readAsDataURL","handleCameraCapture","input","document","createElement","type","accept","capture","onchange","click","classifyWaste","alert","formData","FormData","append","classifyResponse","fetch","method","body","ok","classifyWasteAPI","simulateClassification","error","console","response","data","json","wasteType","predicted_class","confidence","isBiodegradable","includes","nutrients","class","toFixed","biodegradable","message","wasteTypes","randomType","Math","floor","random","length","getSoilRecommendations","soilDeficiencies","wasteNutrients","soilNeeds","recommendations","Object","keys","forEach","nutrient","isNeeded","some","need","startsWith","push","getWasteIcon","icons","className","children","fileName","_jsxFileName","lineNumber","columnNumber","email","points","onClick","getElementById","id","onChange","style","display","src","alt","value","entries","map","key","disabled","toUpperCase","rec","index","_c","$RefreshReg$"],"sources":["C:/Users/shrad/OneDrive/Desktop/study/garbage_segregation/frontend/src/pages/WasteClassification.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst WasteClassification = ({ user }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [soilType, setSoilType] = useState('loamy');\r\n  const [result, setResult] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Soil database\r\n  const soilDb = {\r\n    'clay': { name: 'Clay Soil' },\r\n    'sandy': { name: 'Sandy Soil' },\r\n    'loamy': { name: 'Loamy Soil' },\r\n    'silty': { name: 'Silty Soil' }\r\n  };\r\n\r\n  // Nutrient database\r\n  const nutrientDb = {\r\n    'vegetable': {\r\n      'Nitrogen (N)': '2.5-4% of dry weight',\r\n      'Phosphorus (P)': '0.3-0.8% of dry weight',\r\n      'Potassium (K)': '3-6% of dry weight',\r\n      'Carbon:Nitrogen (C:N)': '15:1 (Ideal for composting)'\r\n    },\r\n    'fruitpeel': {\r\n      'Nitrogen (N)': '1.5-3% of dry weight',\r\n      'Potassium (K)': '8-12% of dry weight',\r\n      'Calcium (Ca)': '0.5-2% of dry weight'\r\n    },\r\n    'garden': {\r\n      'Nitrogen (N)': '1.5-3% of dry weight',\r\n      'Phosphorus (P)': '0.2-0.5% of dry weight',\r\n      'Silica (Si)': '2-5% (Strengthens plant cells)'\r\n    },\r\n    'paper': {\r\n      'Carbon:Nitrogen (C:N)': '200:1 (High carbon)',\r\n      'Lignin Content': '20-30% (Slow to decompose)'\r\n    },\r\n    'cardboard': {\r\n      'Carbon:Nitrogen (C:N)': '350:1 (Very high carbon)',\r\n      'Lignin Content': '25-35%'\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setImageFile(file);\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        setImage(event.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n      setResult(null);\r\n    }\r\n  };\r\n\r\n  const handleCameraCapture = () => {\r\n    const input = document.createElement('input');\r\n    input.type = 'file';\r\n    input.accept = 'image/*';\r\n    input.capture = 'environment';\r\n    input.onchange = handleImageUpload;\r\n    input.click();\r\n  };\r\n\r\n  const classifyWaste = async () => {\r\n    if (!imageFile) {\r\n      alert('Please upload an image first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', imageFile);\r\n      formData.append('soil_type', soilType);\r\n      formData.append('analysis_type', 'waste');\r\n\r\n      const classifyResponse = await fetch('http://localhost:5000/predict', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (classifyResponse.ok) {\r\n        await classifyWasteAPI();\r\n      } else {\r\n        simulateClassification();\r\n      }\r\n    } catch (error) {\r\n      console.error('Classification error:', error);\r\n      simulateClassification();\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  const classifyWasteAPI = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', imageFile);\r\n      \r\n      const response = await fetch('http://localhost:5000/api/classify-simple', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        \r\n        const wasteType = data.predicted_class;\r\n        const confidence = data.confidence;\r\n        \r\n        const isBiodegradable = !['plastic', 'trash'].includes(wasteType);\r\n        const nutrients = nutrientDb[wasteType] || {};\r\n        \r\n        setResult({\r\n          class: wasteType,\r\n          confidence: (confidence * 100).toFixed(2),\r\n          biodegradable: isBiodegradable,\r\n          message: isBiodegradable ? \r\n            'Biodegradable! Good for composting.' : \r\n            'Non-biodegradable! Dispose properly.',\r\n          nutrients: nutrients,\r\n          soilType: soilType\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('API Classification error:', error);\r\n      simulateClassification();\r\n    }\r\n  };\r\n\r\n  const simulateClassification = () => {\r\n    const wasteTypes = ['vegetable', 'fruitpeel', 'garden', 'paper', 'cardboard', 'plastic', 'trash'];\r\n    const randomType = wasteTypes[Math.floor(Math.random() * wasteTypes.length)];\r\n    const confidence = (Math.random() * 30 + 70).toFixed(2);\r\n    \r\n    const isBiodegradable = !['plastic', 'trash'].includes(randomType);\r\n    const nutrients = nutrientDb[randomType] || {};\r\n    \r\n    setResult({\r\n      class: randomType,\r\n      confidence: confidence,\r\n      biodegradable: isBiodegradable,\r\n      message: isBiodegradable ? \r\n        'Biodegradable! Good for composting.' : \r\n        'Non-biodegradable! Dispose properly.',\r\n      nutrients: nutrients,\r\n      soilType: soilType\r\n    });\r\n  };\r\n\r\n  const getSoilRecommendations = (wasteType, soilType) => {\r\n    const soilDeficiencies = {\r\n      'clay': ['Nitrogen (N)', 'Phosphorus (P)', 'Organic Matter'],\r\n      'sandy': ['Potassium (K)', 'Magnesium (Mg)', 'Water Retention'],\r\n      'loamy': ['Calcium (Ca)', 'Sulfur (S)'],\r\n      'silty': ['Zinc (Zn)', 'Manganese (Mn)']\r\n    };\r\n\r\n    const wasteNutrients = nutrientDb[wasteType] || {};\r\n    const soilNeeds = soilDeficiencies[soilType] || [];\r\n    \r\n    const recommendations = [];\r\n    Object.keys(wasteNutrients).forEach(nutrient => {\r\n      const isNeeded = soilNeeds.some(need => nutrient.startsWith(need));\r\n      if (isNeeded) {\r\n        recommendations.push(`${nutrient}: ${wasteNutrients[nutrient]}`);\r\n      }\r\n    });\r\n    \r\n    return recommendations.length > 0 ? recommendations : [\"No significant nutrient match for this soil type\"];\r\n  };\r\n\r\n  const getWasteIcon = (wasteType) => {\r\n    const icons = {\r\n      'vegetable': '🥬',\r\n      'fruitpeel': '🍎',\r\n      'garden': '🌿',\r\n      'paper': '📄',\r\n      'cardboard': '📦',\r\n      'plastic': '🥤',\r\n      'trash': '🗑️'\r\n    };\r\n    return icons[wasteType] || '🗑️';\r\n  };\r\n\r\n  return (\r\n    <div className=\"waste-classification-page\">\r\n      <h1>Waste Classification & Analysis</h1>\r\n      <p className=\"page-description\">\r\n        Upload an image of waste to get AI-powered classification and soil recommendations.\r\n      </p>\r\n\r\n      {/* User Info */}\r\n      <div className=\"user-points-banner\">\r\n        <span>Welcome, {user.name || user.email}!</span>\r\n        <span className=\"points\">Points: {user.points || 0}</span>\r\n      </div>\r\n\r\n      {/* Image Upload Section */}\r\n      <div className=\"card\">\r\n        <div className=\"card-title\">Upload Waste Image</div>\r\n        \r\n        <div className=\"upload-section\">\r\n          <div \r\n            className=\"upload-container\"\r\n            onClick={() => document.getElementById('image-upload').click()}\r\n          >\r\n            <div className=\"upload-icon\">📷</div>\r\n            <div className=\"upload-text\">\r\n              {image ? 'Image selected - Click to change' : 'Click to upload waste image'}\r\n            </div>\r\n            <input\r\n              id=\"image-upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={handleImageUpload}\r\n              style={{ display: 'none' }}\r\n            />\r\n          </div>\r\n          <button \r\n            type=\"button\"\r\n            className=\"camera-btn\"\r\n            onClick={handleCameraCapture}\r\n          >\r\n            📸 Use Camera\r\n          </button>\r\n        </div>\r\n        \r\n        {image && (\r\n          <div className=\"preview-container\">\r\n            <img \r\n              src={image} \r\n              alt=\"Uploaded waste\" \r\n              className=\"preview-image\"\r\n            />\r\n            <button \r\n              type=\"button\"\r\n              className=\"remove-image\"\r\n              onClick={() => {\r\n                setImage(null);\r\n                setImageFile(null);\r\n                setResult(null);\r\n                document.getElementById('image-upload').value = '';\r\n              }}\r\n            >\r\n              Remove Image\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Soil Type Selection */}\r\n      <div className=\"card\">\r\n        <div className=\"card-title\">Select Your Soil Type</div>\r\n        <select \r\n          value={soilType} \r\n          onChange={(e) => setSoilType(e.target.value)}\r\n          className=\"form-select\"\r\n        >\r\n          {Object.entries(soilDb).map(([key, value]) => (\r\n            <option key={key} value={key}>{value.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Classify Button */}\r\n      <button \r\n        onClick={classifyWaste}\r\n        disabled={!image || loading}\r\n        className={`btn ${image && !loading ? 'btn-primary' : 'btn-disabled'}`}\r\n      >\r\n        {loading ? 'Analyzing...' : 'Classify Waste'}\r\n      </button>\r\n\r\n      {/* Results Section */}\r\n      {result && (\r\n        <div className={`results-card ${result.biodegradable ? 'biodegradable' : 'non-biodegradable'}`}>\r\n          <div className=\"result-header\">\r\n            <h2>Classification Results</h2>\r\n            <div className=\"result-icon\">\r\n              {getWasteIcon(result.class)}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"result-details\">\r\n            <div className=\"result-item\">\r\n              <span className=\"result-label\">Waste Type:</span>\r\n              <span className=\"result-value\">{result.class.toUpperCase()}</span>\r\n            </div>\r\n            <div className=\"result-item\">\r\n              <span className=\"result-label\">Confidence:</span>\r\n              <span className=\"result-value\">{result.confidence}%</span>\r\n            </div>\r\n            <div className=\"result-item\">\r\n              <span className=\"result-label\">Status:</span>\r\n              <span className={`result-value ${result.biodegradable ? 'biodegradable' : 'non-biodegradable'}`}>\r\n                {result.biodegradable ? '✅ Biodegradable' : '🚫 Non-biodegradable'}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"result-message\">\r\n            <p>{result.message}</p>\r\n          </div>\r\n\r\n          {/* Nutrient Content */}\r\n          {Object.keys(result.nutrients).length > 0 && (\r\n            <div className=\"nutrients-section\">\r\n              <h3>Nutrient Content</h3>\r\n              <div className=\"nutrients-grid\">\r\n                {Object.entries(result.nutrients).map(([nutrient, value]) => (\r\n                  <div key={nutrient} className=\"nutrient-item\">\r\n                    <strong>{nutrient}:</strong> {value}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Soil Recommendations */}\r\n          {result.biodegradable && (\r\n            <div className=\"recommendations-section\">\r\n              <h3>Recommendations for {soilDb[result.soilType].name}</h3>\r\n              <div className=\"recommendations-list\">\r\n                {getSoilRecommendations(result.class, result.soilType).map((rec, index) => (\r\n                  <div key={index} className=\"recommendation-item\">\r\n                    {rec}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"composting-tips\">\r\n                <h4>Composting Tips</h4>\r\n                <ul>\r\n                  <li>Mix with brown materials (dry leaves, paper) for better decomposition</li>\r\n                  <li>Maintain proper moisture levels</li>\r\n                  <li>Turn compost regularly for aeration</li>\r\n                  <li>Ideal temperature: 140-160°F (60-71°C)</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Non-biodegradable disposal info */}\r\n          {!result.biodegradable && (\r\n            <div className=\"disposal-section\">\r\n              <h3>Proper Disposal</h3>\r\n              <div className=\"disposal-tips\">\r\n                {result.class === 'plastic' && (\r\n                  <ul>\r\n                    <li>Check recycling number on the plastic</li>\r\n                    <li>Clean before recycling</li>\r\n                    <li>Take to designated recycling centers</li>\r\n                  </ul>\r\n                )}\r\n                {result.class === 'trash' && (\r\n                  <ul>\r\n                    <li>Dispose in general waste bin</li>\r\n                    <li>Consider if any parts can be recycled separately</li>\r\n                    <li>Reduce usage of such items in future</li>\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <button \r\n            className=\"btn btn-secondary\"\r\n            onClick={() => {\r\n              setResult(null);\r\n              setImage(null);\r\n              setImageFile(null);\r\n              document.getElementById('image-upload').value = '';\r\n            }}\r\n          >\r\n            Classify Another Item\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Educational Section */}\r\n      {!result && (\r\n        <div className=\"educational-section\">\r\n          <h2>How It Works</h2>\r\n          <div className=\"how-it-works-grid\">\r\n            <div className=\"step-card\">\r\n              <div className=\"step-number\">1</div>\r\n              <h3>Upload Image</h3>\r\n              <p>Take or upload a clear photo of the waste item</p>\r\n            </div>\r\n            <div className=\"step-card\">\r\n              <div className=\"step-number\">2</div>\r\n              <h3>AI Analysis</h3>\r\n              <p>Our AI model classifies the waste type and determines biodegradability</p>\r\n            </div>\r\n            <div className=\"step-card\">\r\n              <div className=\"step-number\">3</div>\r\n              <h3>Get Recommendations</h3>\r\n              <p>Receive personalized composting or disposal recommendations</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"tips-section\">\r\n            <h3>Classification Tips</h3>\r\n            <div className=\"tips-grid\">\r\n              <div className=\"tip-card\">\r\n                <div className=\"tip-icon\">📷</div>\r\n                <h4>Good Photos</h4>\r\n                <p>Take clear, well-lit photos with the waste item filling most of the frame</p>\r\n              </div>\r\n              <div className=\"tip-card\">\r\n                <div className=\"tip-icon\">🎯</div>\r\n                <h4>Single Items</h4>\r\n                <p>Focus on one type of waste at a time for best accuracy</p>\r\n              </div>\r\n              <div className=\"tip-card\">\r\n                <div className=\"tip-icon\">🌍</div>\r\n                <h4>Clean Items</h4>\r\n                <p>Clean items are easier to classify and provide better results</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WasteClassification;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}