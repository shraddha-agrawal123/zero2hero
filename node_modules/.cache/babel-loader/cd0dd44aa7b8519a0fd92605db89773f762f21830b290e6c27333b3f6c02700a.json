{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrad\\\\OneDrive\\\\Desktop\\\\study\\\\garbage_segregation\\\\frontend\\\\src\\\\components\\\\LocationInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationInput = ({\n  address,\n  setAddress,\n  setCoordinates\n}) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch suggestions from Photon API\n  useEffect(() => {\n    if (address.length > 2) {\n      // start search after 3 characters\n      setLoading(true);\n      fetch(`https://photon.komoot.io/api/?q=${address}`).then(res => res.json()).then(data => {\n        setSuggestions(data.features || []);\n        setLoading(false);\n      }).catch(err => {\n        console.error(\"Error fetching suggestions:\", err);\n        setLoading(false);\n      });\n    } else {\n      setSuggestions([]);\n    }\n  }, [address]);\n\n  // Handle selecting a suggestion\n  const handleSelect = suggestion => {\n    setAddress(suggestion.properties.name || suggestion.properties.city || \"\");\n    if (suggestion.geometry) {\n      const latLng = {\n        lat: suggestion.geometry.coordinates[1],\n        lng: suggestion.geometry.coordinates[0]\n      };\n      setCoordinates(latLng);\n    }\n    setSuggestions([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Search location (e.g. Railway Road)...\",\n      className: \"form-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete-dropdown\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), suggestions.map((s, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelect(s),\n        style: {\n          backgroundColor: \"#fff\",\n          padding: \"5px\",\n          cursor: \"pointer\",\n          borderBottom: \"1px solid #ddd\"\n        },\n        children: [s.properties.name, \", \", s.properties.city || \"\", \", \", s.properties.country || \"\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationInput, \"SJrm5gSzMLQie88Z8vmnD8uOFSE=\");\n_c = LocationInput;\nexport default LocationInput;\nvar _c;\n$RefreshReg$(_c, \"LocationInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LocationInput","address","setAddress","setCoordinates","_s","suggestions","setSuggestions","loading","setLoading","length","fetch","then","res","json","data","features","catch","err","console","error","handleSelect","suggestion","properties","name","city","geometry","latLng","lat","coordinates","lng","children","value","onChange","e","target","placeholder","className","fileName","_jsxFileName","lineNumber","columnNumber","map","s","index","onClick","style","backgroundColor","padding","cursor","borderBottom","country","_c","$RefreshReg$"],"sources":["C:/Users/shrad/OneDrive/Desktop/study/garbage_segregation/frontend/src/components/LocationInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst LocationInput = ({ address, setAddress, setCoordinates }) => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch suggestions from Photon API\r\n  useEffect(() => {\r\n    if (address.length > 2) { // start search after 3 characters\r\n      setLoading(true);\r\n      fetch(`https://photon.komoot.io/api/?q=${address}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setSuggestions(data.features || []);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(\"Error fetching suggestions:\", err);\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  }, [address]);\r\n\r\n  // Handle selecting a suggestion\r\n  const handleSelect = (suggestion) => {\r\n    setAddress(suggestion.properties.name || suggestion.properties.city || \"\");\r\n    if (suggestion.geometry) {\r\n      const latLng = {\r\n        lat: suggestion.geometry.coordinates[1],\r\n        lng: suggestion.geometry.coordinates[0],\r\n      };\r\n      setCoordinates(latLng);\r\n    }\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        value={address}\r\n        onChange={(e) => setAddress(e.target.value)}\r\n        placeholder=\"Search location (e.g. Railway Road)...\"\r\n        className=\"form-input\"\r\n      />\r\n\r\n      <div className=\"autocomplete-dropdown\">\r\n        {loading && <div>Loading...</div>}\r\n        {suggestions.map((s, index) => (\r\n          <div\r\n            key={index}\r\n            onClick={() => handleSelect(s)}\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: \"5px\",\r\n              cursor: \"pointer\",\r\n              borderBottom: \"1px solid #ddd\",\r\n            }}\r\n          >\r\n            {s.properties.name}, {s.properties.city || \"\"}, {s.properties.country || \"\"}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}