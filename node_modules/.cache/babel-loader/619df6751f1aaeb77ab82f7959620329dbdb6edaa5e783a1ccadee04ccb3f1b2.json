{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrad\\\\OneDrive\\\\Desktop\\\\study\\\\garbage_segregation\\\\frontend\\\\src\\\\components\\\\LocationInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationInput = ({\n  address,\n  setAddress,\n  setCoordinates\n}) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch suggestions from Photon API\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      if (address.length > 2) {\n        // start search after 3 characters\n        setLoading(true);\n        try {\n          const response = await fetch(`https://photon.komoot.io/api/?q=${encodeURIComponent(address)}&lang=en`);\n          const data = await response.json();\n          setSuggestions(data.features || []);\n        } catch (err) {\n          console.error(\"Error fetching suggestions:\", err);\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        setSuggestions([]);\n      }\n    };\n    const timeoutId = setTimeout(fetchSuggestions, 300); // Debounce\n    return () => clearTimeout(timeoutId);\n  }, [address]);\n\n  // Handle selecting a suggestion\n  const handleSelect = suggestion => {\n    const {\n      properties,\n      geometry\n    } = suggestion;\n    let displayAddress = properties.name || '';\n    if (properties.city && properties.city !== properties.name) {\n      displayAddress += properties.city ? `, ${properties.city}` : '';\n    }\n    if (properties.state && properties.state !== properties.city) {\n      displayAddress += properties.state ? `, ${properties.state}` : '';\n    }\n    if (properties.country) {\n      displayAddress += properties.country ? `, ${properties.country}` : '';\n    }\n    setAddress(displayAddress);\n    if (geometry && geometry.coordinates) {\n      const latLng = {\n        lat: geometry.coordinates[1],\n        lng: geometry.coordinates[0]\n      };\n      setCoordinates(latLng);\n    }\n    setSuggestions([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Search location (e.g. Railway Road)...\",\n      style: {\n        width: '100%',\n        padding: '12px',\n        border: '1px solid #d1d5db',\n        borderRadius: '8px',\n        fontSize: '14px',\n        outline: 'none',\n        transition: 'border-color 0.2s',\n        boxSizing: 'border-box'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        left: 0,\n        right: 0,\n        backgroundColor: 'white',\n        border: '1px solid #d1d5db',\n        borderTop: 'none',\n        borderRadius: '0 0 8px 8px',\n        maxHeight: '200px',\n        overflowY: 'auto',\n        zIndex: 1000,\n        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\n      },\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '12px',\n          color: '#6b7280',\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), suggestions.map((suggestion, index) => {\n        const {\n          properties\n        } = suggestion;\n        const displayText = [properties.name, properties.city, properties.state, properties.country].filter(Boolean).join(', ');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleSelect(suggestion),\n          style: {\n            padding: '12px',\n            cursor: 'pointer',\n            borderBottom: index < suggestions.length - 1 ? '1px solid #f3f4f6' : 'none',\n            fontSize: '14px',\n            transition: 'background-color 0.2s'\n          },\n          onMouseEnter: e => e.target.style.backgroundColor = '#f9fafb',\n          onMouseLeave: e => e.target.style.backgroundColor = 'white',\n          children: displayText\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationInput, \"SJrm5gSzMLQie88Z8vmnD8uOFSE=\");\n_c = LocationInput;\nexport default LocationInput;\nvar _c;\n$RefreshReg$(_c, \"LocationInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LocationInput","address","setAddress","setCoordinates","_s","suggestions","setSuggestions","loading","setLoading","fetchSuggestions","length","response","fetch","encodeURIComponent","data","json","features","err","console","error","timeoutId","setTimeout","clearTimeout","handleSelect","suggestion","properties","geometry","displayAddress","name","city","state","country","coordinates","latLng","lat","lng","style","position","children","value","onChange","e","target","placeholder","width","padding","border","borderRadius","fontSize","outline","transition","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","top","left","right","backgroundColor","borderTop","maxHeight","overflowY","zIndex","boxShadow","color","textAlign","map","index","displayText","filter","Boolean","join","onClick","cursor","borderBottom","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/shrad/OneDrive/Desktop/study/garbage_segregation/frontend/src/components/LocationInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst LocationInput = ({ address, setAddress, setCoordinates }) => {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch suggestions from Photon API\r\n  useEffect(() => {\r\n    const fetchSuggestions = async () => {\r\n      if (address.length > 2) { // start search after 3 characters\r\n        setLoading(true);\r\n        try {\r\n          const response = await fetch(`https://photon.komoot.io/api/?q=${encodeURIComponent(address)}&lang=en`);\r\n          const data = await response.json();\r\n          setSuggestions(data.features || []);\r\n        } catch (err) {\r\n          console.error(\"Error fetching suggestions:\", err);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      } else {\r\n        setSuggestions([]);\r\n      }\r\n    };\r\n\r\n    const timeoutId = setTimeout(fetchSuggestions, 300); // Debounce\r\n    return () => clearTimeout(timeoutId);\r\n  }, [address]);\r\n\r\n  // Handle selecting a suggestion\r\n  const handleSelect = (suggestion) => {\r\n    const { properties, geometry } = suggestion;\r\n    let displayAddress = properties.name || '';\r\n    \r\n    if (properties.city && properties.city !== properties.name) {\r\n      displayAddress += properties.city ? `, ${properties.city}` : '';\r\n    }\r\n    if (properties.state && properties.state !== properties.city) {\r\n      displayAddress += properties.state ? `, ${properties.state}` : '';\r\n    }\r\n    if (properties.country) {\r\n      displayAddress += properties.country ? `, ${properties.country}` : '';\r\n    }\r\n\r\n    setAddress(displayAddress);\r\n    \r\n    if (geometry && geometry.coordinates) {\r\n      const latLng = {\r\n        lat: geometry.coordinates[1],\r\n        lng: geometry.coordinates[0],\r\n      };\r\n      setCoordinates(latLng);\r\n    }\r\n    setSuggestions([]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <input\r\n        value={address}\r\n        onChange={(e) => setAddress(e.target.value)}\r\n        placeholder=\"Search location (e.g. Railway Road)...\"\r\n        style={{\r\n          width: '100%',\r\n          padding: '12px',\r\n          border: '1px solid #d1d5db',\r\n          borderRadius: '8px',\r\n          fontSize: '14px',\r\n          outline: 'none',\r\n          transition: 'border-color 0.2s',\r\n          boxSizing: 'border-box'\r\n        }}\r\n      />\r\n\r\n      {suggestions.length > 0 && (\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '100%',\r\n          left: 0,\r\n          right: 0,\r\n          backgroundColor: 'white',\r\n          border: '1px solid #d1d5db',\r\n          borderTop: 'none',\r\n          borderRadius: '0 0 8px 8px',\r\n          maxHeight: '200px',\r\n          overflowY: 'auto',\r\n          zIndex: 1000,\r\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)'\r\n        }}>\r\n          {loading && (\r\n            <div style={{ padding: '12px', color: '#6b7280', textAlign: 'center' }}>\r\n              Loading...\r\n            </div>\r\n          )}\r\n          {suggestions.map((suggestion, index) => {\r\n            const { properties } = suggestion;\r\n            const displayText = [\r\n              properties.name,\r\n              properties.city,\r\n              properties.state,\r\n              properties.country\r\n            ].filter(Boolean).join(', ');\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                onClick={() => handleSelect(suggestion)}\r\n                style={{\r\n                  padding: '12px',\r\n                  cursor: 'pointer',\r\n                  borderBottom: index < suggestions.length - 1 ? '1px solid #f3f4f6' : 'none',\r\n                  fontSize: '14px',\r\n                  transition: 'background-color 0.2s'\r\n                }}\r\n                onMouseEnter={(e) => e.target.style.backgroundColor = '#f9fafb'}\r\n                onMouseLeave={(e) => e.target.style.backgroundColor = 'white'}\r\n              >\r\n                {displayText}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}